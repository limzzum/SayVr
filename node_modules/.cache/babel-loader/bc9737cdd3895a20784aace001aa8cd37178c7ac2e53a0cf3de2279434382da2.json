{"ast":null,"code":"// api.ts\nimport axios from \"axios\";\nconst BASE_URL = \"http://localhost:8080/api/game\";\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport let SocketType = /*#__PURE__*/function (SocketType) {\n  SocketType[\"GAME_INFO\"] = \"GAME_INFO\";\n  SocketType[\"GAME_END\"] = \"GAME_END\";\n  SocketType[\"CHAT\"] = \"CHAT\";\n  SocketType[\"QUIZ\"] = \"QUIZ\";\n  SocketType[\"QUIZ_TIME_OVER\"] = \"QUIZ_TIME_OVER\";\n  SocketType[\"PLAYER_OUT\"] = \"PLAYER_OUT\";\n  return SocketType;\n}({});\nexport const waitingGame = () => {\n  return axiosInstance.get(\"/wait\");\n};","map":{"version":3,"names":["axios","BASE_URL","axiosInstance","create","baseURL","headers","SocketType","waitingGame","get"],"sources":["/Users/limzzum/ssafyProject/S09P31A501/frontend/src/api/MatchingGameAPI/MatchingGameAPI.tsx"],"sourcesContent":["// api.ts\nimport axios, { AxiosResponse } from \"axios\";\nconst BASE_URL = \"http://localhost:8080/api/game\";\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport enum SocketType {\n  GAME_INFO = \"GAME_INFO\",\n  GAME_END = \"GAME_END\",\n  CHAT = \"CHAT\",\n  QUIZ = \"QUIZ\",\n  QUIZ_TIME_OVER = \"QUIZ_TIME_OVER\",\n  PLAYER_OUT = \"PLAYER_OUT\",\n}\n\nexport interface ResponseDto<T> {\n  data: T;\n  message: string;\n  httpStatus: string;\n}\n\nexport interface WaitingGameResponseDto {\n  gameId: number;\n}\n\nexport const waitingGame = (): Promise<\n  AxiosResponse<ResponseDto<WaitingGameResponseDto>>\n> => {\n  return axiosInstance.get(\"/wait\");\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,MAAMC,QAAQ,GAAG,gCAAgC;AAEjD,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAmBtB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAEtB;EACH,OAAOL,aAAa,CAACM,GAAG,CAAC,OAAO,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}