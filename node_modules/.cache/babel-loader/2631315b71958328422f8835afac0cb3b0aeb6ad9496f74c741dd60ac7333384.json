{"ast":null,"code":"var _jsxFileName = \"/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport React, { useEffect, useState } from \"react\";\n// Axios 추가\nimport { URL } from \"./constants/constants\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { waitingGame } from \"../../api/MatchingGameAPI/MatchingGameAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SocketType = /*#__PURE__*/function (SocketType) {\n  SocketType[\"GAME_INFO\"] = \"GAME_INFO\";\n  SocketType[\"GAME_END\"] = \"GAME_END\";\n  SocketType[\"CHAT\"] = \"CHAT\";\n  SocketType[\"QUIZ\"] = \"QUIZ\";\n  SocketType[\"QUIZ_TIME_OVER\"] = \"QUIZ_TIME_OVER\";\n  SocketType[\"PLAYER_OUT\"] = \"PLAYER_OUT\";\n  return SocketType;\n}(SocketType || {});\nconst socket = new SockJS(URL);\nconst stompClient = new Client({\n  webSocketFactory: () => socket\n});\nstompClient.activate();\nfunction MatchingGamePage() {\n  _s();\n  const [gameId, setGameId] = useState(null);\n  const messageToSend = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\"\n  };\n\n  // const startGame = async () => {\n  //   try {\n  //     const response = await axios.post(\"/api/start-game\"); // Axios를 사용한 요청\n  //     setGameId(response.data.gameId); // 게임 아이디 설정\n  //     subscribeToChatRoom(response.data.gameId); // 웹 소켓 구독 시작\n  //   } catch (error) {\n  //     console.error(\"Error starting the game:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때, 웹 소켓을 사용할 준비\n    stompClient.activate();\n    console.log(\"axios 요청 호출\");\n    waitingGame().then(response => {\n      console.log(response);\n      setGameId(response.data.data.gameId);\n\n      // 게임 아이디를 받아온 후, 웹 소켓을 초기화하고 구독합니다.\n      const subscription = subscribeToChatRoom(response.data.data.gameId);\n      return () => {\n        // 컴포넌트가 언마운트될 때 구독을 해제\n        subscription.unsubscribe();\n      };\n    }).catch(error => {\n      // 오류 처리\n    });\n    return () => {\n      // 컴포넌트가 언마운트될 때, 웹 소켓 연결 해제\n      stompClient.deactivate();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matching-game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waiting-game-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchingGamePage, \"voi8IuICPW1XfvcpSFpdlYbTa+g=\");\n_c = MatchingGamePage;\nfunction subscribeToChatRoom(gameId) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, message => {\n    const receivedMessage = JSON.parse(message.body);\n    console.log(\"Received message:\", receivedMessage);\n  });\n}\nfunction publishMessageToChatRoom(gameId, message) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message)\n  });\n}\nexport default MatchingGamePage;\nvar _c;\n$RefreshReg$(_c, \"MatchingGamePage\");","map":{"version":3,"names":["React","useEffect","useState","URL","Client","SockJS","waitingGame","jsxDEV","_jsxDEV","SocketType","socket","stompClient","webSocketFactory","activate","MatchingGamePage","_s","gameId","setGameId","messageToSend","socketType","GAME_INFO","message","console","log","then","response","data","subscription","subscribeToChatRoom","unsubscribe","catch","error","deactivate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","subscribe","receivedMessage","JSON","parse","body","publishMessageToChatRoom","publish","destination","stringify","$RefreshReg$"],"sources":["/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx"],"sourcesContent":["import \"./style.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Axios 추가\nimport { URL, serverUrl, localUrl } from \"./constants/constants\";\nimport { Client, Frame } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { config } from \"process\";\nimport { waitingGame } from \"../../api/MatchingGameAPI/MatchingGameAPI\";\n\nenum SocketType {\n  GAME_INFO = \"GAME_INFO\",\n  GAME_END = \"GAME_END\",\n  CHAT = \"CHAT\",\n  QUIZ = \"QUIZ\",\n  QUIZ_TIME_OVER = \"QUIZ_TIME_OVER\",\n  PLAYER_OUT = \"PLAYER_OUT\",\n}\n\ninterface receiveMessage {\n  socketType: SocketType;\n  gameStatus: GameStatus;\n  data: any;\n  message: string;\n}\n\ninterface sendMessage {\n  socketType: SocketType;\n  message: string;\n}\n\ninterface GameStatus {\n  gameId: number;\n  curRound: number;\n  playerA: Player;\n  playerB: Player;\n  question: string;\n  answer: string;\n  quizEndTime?: Date;\n}\n\ninterface Player {\n  userId: number;\n  ranking: number;\n  point: number;\n  winCnt: number;\n  profile: string;\n}\n\nconst socket = new SockJS(URL);\nconst stompClient = new Client({ webSocketFactory: () => socket });\n\nstompClient.activate();\n\nfunction MatchingGamePage() {\n  const [gameId, setGameId] = useState<number | null>(null);\n\n  const messageToSend: sendMessage = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\",\n  };\n\n  // const startGame = async () => {\n  //   try {\n  //     const response = await axios.post(\"/api/start-game\"); // Axios를 사용한 요청\n  //     setGameId(response.data.gameId); // 게임 아이디 설정\n  //     subscribeToChatRoom(response.data.gameId); // 웹 소켓 구독 시작\n  //   } catch (error) {\n  //     console.error(\"Error starting the game:\", error);\n  //   }\n  // };\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때, 웹 소켓을 사용할 준비\n    stompClient.activate();\n    console.log(\"axios 요청 호출\");\n    waitingGame()\n      .then((response) => {\n        console.log(response);\n        setGameId(response.data.data.gameId);\n\n        // 게임 아이디를 받아온 후, 웹 소켓을 초기화하고 구독합니다.\n        const subscription = subscribeToChatRoom(response.data.data.gameId);\n\n        return () => {\n          // 컴포넌트가 언마운트될 때 구독을 해제\n          subscription.unsubscribe();\n        };\n      })\n      .catch((error) => {\n        // 오류 처리\n      });\n\n    return () => {\n      // 컴포넌트가 언마운트될 때, 웹 소켓 연결 해제\n      stompClient.deactivate();\n    };\n  }, []);\n\n  return (\n    <div className=\"matching-game-container\">\n      <div className=\"waiting-game-container\"></div>\n    </div>\n  );\n}\n\nfunction subscribeToChatRoom(gameId: number) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, (message: Frame) => {\n    const receivedMessage: receiveMessage = JSON.parse(message.body);\n    console.log(\"Received message:\", receivedMessage);\n  });\n}\n\nfunction publishMessageToChatRoom(gameId: number, message: sendMessage) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message),\n  });\n}\n\nexport default MatchingGamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}