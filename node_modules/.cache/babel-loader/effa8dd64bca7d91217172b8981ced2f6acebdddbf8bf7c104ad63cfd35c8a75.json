{"ast":null,"code":"var _jsxFileName = \"/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Axios 추가\nimport { URL, serverUrl } from \"./constants/constants\";\nimport { Client } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SocketType = /*#__PURE__*/function (SocketType) {\n  SocketType[\"GAME_INFO\"] = \"GAME_INFO\";\n  SocketType[\"GAME_END\"] = \"GAME_END\";\n  SocketType[\"CHAT\"] = \"CHAT\";\n  SocketType[\"QUIZ\"] = \"QUIZ\";\n  SocketType[\"QUIZ_TIME_OVER\"] = \"QUIZ_TIME_OVER\";\n  SocketType[\"PLAYER_OUT\"] = \"PLAYER_OUT\";\n  return SocketType;\n}(SocketType || {});\nconst socket = new SockJS(URL);\nconst stompClient = new Client({\n  webSocketFactory: () => socket\n});\nstompClient.activate();\nfunction MatchingGamePage() {\n  _s();\n  const [gameId, setGameId] = useState(null);\n  const messageToSend = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\"\n  };\n  const startGame = async () => {\n    try {\n      const response = await axios.post(\"/api/start-game\"); // Axios를 사용한 요청\n      setGameId(response.data.gameId); // 게임 아이디 설정\n      subscribeToChatRoom(response.data.gameId); // 웹 소켓 구독 시작\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때, 웹 소켓을 사용할 준비\n    stompClient.activate();\n    axios.get(serverUrl + \"/api/game/wait\").then(response => {\n      setGameId(response.data.gameId);\n\n      // 게임 아이디를 받아온 후, 웹 소켓을 초기화하고 구독합니다.\n      const subscription = subscribeToChatRoom(response.data.gameId);\n      return () => {\n        // 컴포넌트가 언마운트될 때 구독을 해제\n        subscription.unsubscribe();\n      };\n    }).catch(error => {\n      // 오류 처리\n    });\n    return () => {\n      // 컴포넌트가 언마운트될 때, 웹 소켓 연결 해제\n      stompClient.deactivate();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matching-game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchingGamePage, \"voi8IuICPW1XfvcpSFpdlYbTa+g=\");\n_c = MatchingGamePage;\nfunction subscribeToChatRoom(gameId) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, message => {\n    const receivedMessage = JSON.parse(message.body);\n    console.log(\"Received message:\", receivedMessage);\n  });\n}\nfunction publishMessageToChatRoom(gameId, message) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message)\n  });\n}\nexport default MatchingGamePage;\nvar _c;\n$RefreshReg$(_c, \"MatchingGamePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","URL","serverUrl","Client","SockJS","jsxDEV","_jsxDEV","SocketType","socket","stompClient","webSocketFactory","activate","MatchingGamePage","_s","gameId","setGameId","messageToSend","socketType","GAME_INFO","message","startGame","response","post","data","subscribeToChatRoom","error","console","get","then","subscription","unsubscribe","catch","deactivate","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","subscribe","receivedMessage","JSON","parse","body","log","publishMessageToChatRoom","publish","destination","stringify","$RefreshReg$"],"sources":["/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx"],"sourcesContent":["import \"./style.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Axios 추가\nimport { URL, serverUrl } from \"./constants/constants\";\nimport { Client, Frame } from \"@stomp/stompjs\";\nimport SockJS from \"sockjs-client\";\n\nenum SocketType {\n  GAME_INFO = \"GAME_INFO\",\n  GAME_END = \"GAME_END\",\n  CHAT = \"CHAT\",\n  QUIZ = \"QUIZ\",\n  QUIZ_TIME_OVER = \"QUIZ_TIME_OVER\",\n  PLAYER_OUT = \"PLAYER_OUT\",\n}\n\ninterface receiveMessage {\n  socketType: SocketType;\n  gameStatus: GameStatus;\n  data: any;\n  message: string;\n}\n\ninterface sendMessage {\n  socketType: SocketType;\n  message: string;\n}\n\ninterface GameStatus {\n  gameId: bigint;\n  curRound: number;\n  playerA: Player;\n  playerB: Player;\n  question: string;\n  answer: string;\n  quizEndTime?: Date;\n}\n\ninterface Player {\n  userId: bigint;\n  ranking: bigint;\n  point: bigint;\n  winCnt: number;\n  profile: string;\n}\n\nconst socket = new SockJS(URL);\nconst stompClient = new Client({ webSocketFactory: () => socket });\n\nstompClient.activate();\n\nfunction MatchingGamePage() {\n  const [gameId, setGameId] = useState<string | null>(null);\n\n  const messageToSend: sendMessage = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\",\n  };\n\n  const startGame = async () => {\n    try {\n      const response = await axios.post(\"/api/start-game\"); // Axios를 사용한 요청\n      setGameId(response.data.gameId); // 게임 아이디 설정\n      subscribeToChatRoom(response.data.gameId); // 웹 소켓 구독 시작\n    } catch (error) {\n      console.error(\"Error starting the game:\", error);\n    }\n  };\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때, 웹 소켓을 사용할 준비\n    stompClient.activate();\n    axios\n      .get(serverUrl + \"/api/game/wait\")\n      .then((response) => {\n        setGameId(response.data.gameId);\n\n        // 게임 아이디를 받아온 후, 웹 소켓을 초기화하고 구독합니다.\n        const subscription = subscribeToChatRoom(response.data.gameId);\n\n        return () => {\n          // 컴포넌트가 언마운트될 때 구독을 해제\n          subscription.unsubscribe();\n        };\n      })\n      .catch((error) => {\n        // 오류 처리\n      });\n\n    return () => {\n      // 컴포넌트가 언마운트될 때, 웹 소켓 연결 해제\n      stompClient.deactivate();\n    };\n  }, []);\n\n  return (\n    <div className=\"matching-game-container\">\n      <button onClick={startGame}>Start Game</button>\n    </div>\n  );\n}\n\nfunction subscribeToChatRoom(gameId: string) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, (message: Frame) => {\n    const receivedMessage: receiveMessage = JSON.parse(message.body);\n    console.log(\"Received message:\", receivedMessage);\n  });\n}\n\nfunction publishMessageToChatRoom(gameId: string, message: sendMessage) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message),\n  });\n}\n\nexport default MatchingGamePage;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,GAAG,EAAEC,SAAS,QAAQ,uBAAuB;AACtD,SAASC,MAAM,QAAe,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAE9BC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA,EAAVA,UAAU;AAuCf,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACH,GAAG,CAAC;AAC9B,MAAMQ,WAAW,GAAG,IAAIN,MAAM,CAAC;EAAEO,gBAAgB,EAAEA,CAAA,KAAMF;AAAO,CAAC,CAAC;AAElEC,WAAW,CAACE,QAAQ,CAAC,CAAC;AAEtB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EAEzD,MAAMiB,aAA0B,GAAG;IACjCC,UAAU,EAAEV,UAAU,CAACW,SAAS;IAChCC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;MACtDP,SAAS,CAACM,QAAQ,CAACE,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC;MACjCU,mBAAmB,CAACH,QAAQ,CAACE,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd;IACAW,WAAW,CAACE,QAAQ,CAAC,CAAC;IACtBX,KAAK,CACF2B,GAAG,CAACzB,SAAS,GAAG,gBAAgB,CAAC,CACjC0B,IAAI,CAAEP,QAAQ,IAAK;MAClBN,SAAS,CAACM,QAAQ,CAACE,IAAI,CAACT,MAAM,CAAC;;MAE/B;MACA,MAAMe,YAAY,GAAGL,mBAAmB,CAACH,QAAQ,CAACE,IAAI,CAACT,MAAM,CAAC;MAE9D,OAAO,MAAM;QACX;QACAe,YAAY,CAACC,WAAW,CAAC,CAAC;MAC5B,CAAC;IACH,CAAC,CAAC,CACDC,KAAK,CAAEN,KAAK,IAAK;MAChB;IAAA,CACD,CAAC;IAEJ,OAAO,MAAM;MACX;MACAhB,WAAW,CAACuB,UAAU,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtC5B,OAAA;MAAQ6B,OAAO,EAAEf,SAAU;MAAAc,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC1B,EAAA,CAjDQD,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAmDzB,SAASY,mBAAmBA,CAACV,MAAc,EAAE;EAC3C,OAAOL,WAAW,CAACgC,SAAS,CAAE,eAAc3B,MAAO,EAAC,EAAGK,OAAc,IAAK;IACxE,MAAMuB,eAA+B,GAAGC,IAAI,CAACC,KAAK,CAACzB,OAAO,CAAC0B,IAAI,CAAC;IAChEnB,OAAO,CAACoB,GAAG,CAAC,mBAAmB,EAAEJ,eAAe,CAAC;EACnD,CAAC,CAAC;AACJ;AAEA,SAASK,wBAAwBA,CAACjC,MAAc,EAAEK,OAAoB,EAAE;EACtEV,WAAW,CAACuC,OAAO,CAAC;IAClBC,WAAW,EAAG,aAAYnC,MAAO,EAAC;IAClC+B,IAAI,EAAEF,IAAI,CAACO,SAAS,CAAC/B,OAAO;EAC9B,CAAC,CAAC;AACJ;AAEA,eAAeP,gBAAgB;AAAC,IAAA4B,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}