{"ast":null,"code":"var _jsxFileName = \"/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport React, { useEffect } from 'react';\nimport { URL } from './constants/constants';\nimport { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SocketType = /*#__PURE__*/function (SocketType) {\n  SocketType[\"GAME_INFO\"] = \"GAME_INFO\";\n  SocketType[\"GAME_END\"] = \"GAME_END\";\n  SocketType[\"CHAT\"] = \"CHAT\";\n  SocketType[\"QUIZ\"] = \"QUIZ\";\n  SocketType[\"QUIZ_TIME_OVER\"] = \"QUIZ_TIME_OVER\";\n  SocketType[\"PLAYER_OUT\"] = \"PLAYER_OUT\";\n  return SocketType;\n}(SocketType || {});\nconst socket = new SockJS(URL);\nconst stompClient = new Client({\n  webSocketFactory: () => socket\n});\nstompClient.activate();\nfunction MatchingGamePage() {\n  _s();\n  const messageToSend = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\"\n  };\n  useEffect(() => {\n    const subscription = subscribeToChatRoom('5');\n    return () => {\n      // 컴포넌트가 언마운트될 때 구독을 해제\n      subscription.unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"matching-game-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(MatchingGamePage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MatchingGamePage;\nfunction subscribeToChatRoom(gameId) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, message => {\n    const receivedMessage = JSON.parse(message.body);\n    console.log('Received message:', receivedMessage);\n  });\n}\nfunction publishMessageToChatRoom(gameId, message) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message)\n  });\n}\nexport default MatchingGamePage;\nvar _c;\n$RefreshReg$(_c, \"MatchingGamePage\");","map":{"version":3,"names":["React","useEffect","URL","Client","SockJS","jsxDEV","_jsxDEV","SocketType","socket","stompClient","webSocketFactory","activate","MatchingGamePage","_s","messageToSend","socketType","GAME_INFO","message","subscription","subscribeToChatRoom","unsubscribe","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","gameId","subscribe","receivedMessage","JSON","parse","body","console","log","publishMessageToChatRoom","publish","destination","stringify","$RefreshReg$"],"sources":["/Users/limzzum/ssafyProject/S09P31A501/frontend/src/pages/MatchingGamePage/index.tsx"],"sourcesContent":["import './style.css';\nimport React, { useEffect } from 'react';\nimport { URL } from './constants/constants';\nimport { Client, Frame } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nenum SocketType {\n  GAME_INFO = 'GAME_INFO',\n  GAME_END = 'GAME_END',\n  CHAT = 'CHAT',\n  QUIZ = 'QUIZ',\n  QUIZ_TIME_OVER = 'QUIZ_TIME_OVER',\n  PLAYER_OUT = 'PLAYER_OUT',\n}\n\ninterface receiveMessage {\n  socketType: SocketType;\n  gameStatus: GameStatus;\n  data: any;\n  message: string;\n}\n\ninterface sendMessage {\n  socketType: SocketType;\n  message: string;\n}\n\ninterface GameStatus {\n  gameId: bigint;\n  curRound: number;\n  playerA: Player;\n  playerB: Player;\n  question: string;\n  answer: string;\n  quizEndTime?: Date;\n}\n\ninterface Player {\n  userId: bigint;\n  ranking: bigint;\n  point: bigint;\n  winCnt: number;\n  profile: string;\n}\n\nconst socket = new SockJS(URL);\nconst stompClient = new Client({ webSocketFactory: () => socket });\n\nstompClient.activate();\n\nfunction MatchingGamePage() {\n  const messageToSend: sendMessage = {\n    socketType: SocketType.GAME_INFO,\n    message: \"hihi\",\n  };\n\n  useEffect(() => {\n    const subscription = subscribeToChatRoom('5');\n\n    return () => {\n      // 컴포넌트가 언마운트될 때 구독을 해제\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"matching-game-container\">\n      {/* 웹 소켓과 관련된 UI를 추가할 수 있습니다 */}\n    </div>\n  );\n}\n\nfunction subscribeToChatRoom(gameId: string) {\n  return stompClient.subscribe(`/topic/game.${gameId}`, (message: Frame) => {\n    const receivedMessage:receiveMessage = JSON.parse(message.body);\n    console.log('Received message:', receivedMessage);\n  });\n}\n\nfunction publishMessageToChatRoom(gameId: string, message: sendMessage) {\n  stompClient.publish({\n    destination: `/pub/game.${gameId}`,\n    body: JSON.stringify(message),\n  });\n}\n\nexport default MatchingGamePage;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,GAAG,QAAQ,uBAAuB;AAC3C,SAASC,MAAM,QAAe,gBAAgB;AAC9C,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,IAE9BC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA,EAAVA,UAAU;AAuCf,MAAMC,MAAM,GAAG,IAAIJ,MAAM,CAACF,GAAG,CAAC;AAC9B,MAAMO,WAAW,GAAG,IAAIN,MAAM,CAAC;EAAEO,gBAAgB,EAAEA,CAAA,KAAMF;AAAO,CAAC,CAAC;AAElEC,WAAW,CAACE,QAAQ,CAAC,CAAC;AAEtB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,aAA0B,GAAG;IACjCC,UAAU,EAAER,UAAU,CAACS,SAAS;IAChCC,OAAO,EAAE;EACX,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAGC,mBAAmB,CAAC,GAAG,CAAC;IAE7C,OAAO,MAAM;MACX;MACAD,YAAY,CAACE,WAAW,CAAC,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAKe,SAAS,EAAC;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEV;AAACZ,EAAA,CApBQD,gBAAgB;AAAAc,EAAA,GAAhBd,gBAAgB;AAsBzB,SAASO,mBAAmBA,CAACQ,MAAc,EAAE;EAC3C,OAAOlB,WAAW,CAACmB,SAAS,CAAE,eAAcD,MAAO,EAAC,EAAGV,OAAc,IAAK;IACxE,MAAMY,eAA8B,GAAGC,IAAI,CAACC,KAAK,CAACd,OAAO,CAACe,IAAI,CAAC;IAC/DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,eAAe,CAAC;EACnD,CAAC,CAAC;AACJ;AAEA,SAASM,wBAAwBA,CAACR,MAAc,EAAEV,OAAoB,EAAE;EACtER,WAAW,CAAC2B,OAAO,CAAC;IAClBC,WAAW,EAAG,aAAYV,MAAO,EAAC;IAClCK,IAAI,EAAEF,IAAI,CAACQ,SAAS,CAACrB,OAAO;EAC9B,CAAC,CAAC;AACJ;AAEA,eAAeL,gBAAgB;AAAC,IAAAc,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}